{
  "swagger": "2.0",
  "info": {
    "title": "Mataam REST API Explorer",
    "version": "1.0"
  },
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "users",
      "description": "users api"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "This API is responsible for login Customer(Not implemented yet)",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userMobileAuth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/registration/confirm": {
      "get": {
        "tags": [
          "registration"
        ],
        "description": "This API is responsible for user registration confirmation(Not implemented yet)",
        "operationId": "registrationConfirm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "access_token",
            "description": "User access token for authorized requests",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "verify_token",
            "description": "User temporary token for confirm registration",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Token expired",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/registration/repeat_confirm": {
      "post": {
        "tags": [
          "registration"
        ],
        "description": "This API send email with new confirm link(Not implemented yet.)",
        "operationId": "registrationRepeatConfirm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "access_token",
            "description": "User access token for authorized requests",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for getting Users",
        "operationId": "getUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for creating User",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON body",
            "required": true,
            "schema": {      
              "$ref": "#/definitions/userCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for getting an User with specific ID",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "allowMultiple": false,
            "required": false,
            "in": "path",
            "description": "User id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found resource",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for updating an User data with specific ID",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "allowMultiple": false,
            "required": true,
            "in": "path",
            "description": "User id",
            "type": "integer"
          }, {
            "in": "body",
            "name": "body",
            "description": "JSON body",
            "required": true,
            "schema": {      
              "$ref": "#/definitions/userCreate"
            }
          }],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found resource",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for deleting an User with specific ID",
        "operationId": "deleteUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "allowMultiple": false,
            "required": false,
            "in": "path",
            "description": "User id",
            "type": "integer"
        }],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/userModel"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found resource",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    } ,
    "/users/{id}/send_sms_code": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for sending SMS verification code",
        "operationId": "sendSmsCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "allowMultiple": false,
            "required": false,
            "in": "path",
            "description": "User id",
            "type": "integer"
          }, {
            "in": "formData",
            "name": "mobile_no",
            "description": "Mobile number",
            "required": true,
            "allowMultiple": false,
            "type": "string",
            "paramType": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "successful response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    } ,
    "/users/{id}/verify_sms_code": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "This API is responsible for verifying SMS code",
        "operationId": "verifySmsCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "allowMultiple": false,
            "required": false,
            "in": "path",
            "description": "User id",
            "type": "integer"
          }, {
            "in": "formData",
            "name": "mobile_no",
            "description": "Mobile number",
            "required": true,
            "allowMultiple": false,
            "type": "string",
            "paramType": "formData"
          }, {
            "in": "formData",
            "name": "code",
            "description": "Verify code",
            "required": true,
            "allowMultiple": false,
            "type": "string",
            "paramType": "formData"
          }
        ],
        "responses": {
          "202": {
            "description": "successful response",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid json/ invalid dataset",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "extendedError": {
      "properties": {
        "error": {
          "type": "integer"
        },
        "code": {
          "type": "float"
        },
        "details": {
          "type": "string"
        }
      }
    },
    "successDelete": {
      "properties": {
        "status": {
          "type": "integer",
          "default": 202
        }
      }
    },
    "successUpdate": {
      "properties": {
        "status": {
          "type": "integer",
          "default": 202
        }
      }
    },
    "id": {
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "userMobileAuth": {
      "required": ["mobile_no", "password"],
      "properties": {
        "mobile_no": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ttl": {
          "type": "integer"
        }
      }
    },
    "userModel": {
      "required": ["mobile_no", "first_name", "last_name", "password"],
      "properties": {
        "mobile_no": {
          "type": "string"
        }, 
        "first_name": {
          "type": "string"
        }, 
        "last_name": {
          "type": "string"
        }, 
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "modified": {
          "type": "string"
        }
      }
    },
    "userCreate": {
      "required": ["mobile_no", "first_name", "last_name", "password"],
      "properties": {
        "mobile_no": {
          "type": "string"
        }, 
        "first_name": {
          "type": "string"
        }, 
        "last_name": {
          "type": "string"
        }, 
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
